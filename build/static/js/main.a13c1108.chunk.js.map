{"version":3,"sources":["images/Things/armguard.png","images/Things/banner.png","images/Things/blanket.png","images/Things/bottles.png","images/Things/brasspins.png","images/Things/coinring.png","images/Things/costumes.png","images/Things/framebolsters.png","components/Header/Header.js","components/Carousel/Carousel.js","components/Sections/SectionA.js","components/Sections/SectionB.js","components/Sections/SectionC.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","id","Component","images","image","armguard","info","tag","banner","blanket","bottles","brasspins","coinring","costumes","framebolsters","Crafts","craftArray","map","craft","index","key","src","title","alt","lib","SectionA","SectionB","App","components_Header_Header","Carousel","Sections_SectionA","Sections_SectionB","SectionC","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gOCezBC,yLAVX,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YACNJ,EAAAC,EAAAC,cAAA,oCALWG,8JCYjBC,EAAS,CACX,CACEC,MAAOC,IACPC,KAAM,2BACNC,IAAK,uEACJ,CACDH,MAAOI,IACPF,KAAM,0DACNC,IAAK,kDACJ,CACDH,MAAOK,IACPH,KAAM,+BACNC,IAAK,6EACJ,CACDH,MAAOM,IACPJ,KAAM,+BACNC,IAAK,2FACJ,CACDH,MAAOO,IACPL,KAAM,8BACNC,IAAK,kFACJ,CACDH,MAAOQ,IACPN,KAAM,8CACNC,IAAK,gGACJ,CACDH,MAAOS,IACPP,KAAM,0BACNC,IAAK,6HACJ,CACDH,MAAOU,IACPR,KAAM,6CACNC,IAAK,gGA8BMQ,mLAvBX,IAAIC,EAAab,EAAOc,IAAI,SAACC,EAAOC,GAClC,OACEtB,EAAAC,EAAAC,cAAA,OAAKE,GAAG,SAASmB,IAAKD,GACpBtB,EAAAC,EAAAC,cAAA,OACEC,UAAU,WACVqB,IAAKH,EAAMd,MACXkB,MAAOJ,EAAMZ,KACbiB,IAAKL,EAAMX,MAEbV,EAAAC,EAAAC,cAAA,UAAKmB,EAAMX,QAKjB,OACEV,EAAAC,EAAAC,cAACyB,EAAA,SAAD,KACGR,UApBYd,aCjCNuB,0LAZX,OACE5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,yBAReG,cCYRwB,mLAVX,OACE7B,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YACNJ,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,oDACDF,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,iBAAZ,mBANgBG,aCURuB,mLARX,OACE5B,EAAAC,EAAAC,cAAA,OAAKE,GAAG,WACTJ,EAAAC,EAAAC,cAAA,4BAJkBG,aCoBRyB,mLAZX,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6B,EAAD,MACA/B,EAAAC,EAAAC,cAAC8B,EAAD,MACAhC,EAAAC,EAAAC,cAAC+B,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAACiC,EAAD,cARU9B,aCGE+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a13c1108.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/armguard.a5610229.png\";","module.exports = __webpack_public_path__ + \"static/media/banner.6d2221a3.png\";","module.exports = __webpack_public_path__ + \"static/media/blanket.dcd045e5.png\";","module.exports = __webpack_public_path__ + \"static/media/bottles.a7ebdb5a.png\";","module.exports = __webpack_public_path__ + \"static/media/brasspins.a29628d0.png\";","module.exports = __webpack_public_path__ + \"static/media/coinring.78513188.png\";","module.exports = __webpack_public_path__ + \"static/media/costumes.3955b444.png\";","module.exports = __webpack_public_path__ + \"static/media/framebolsters.55f67b67.png\";","import React, { Component } from 'react';\nimport '../../App.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <div id=\"imageDiv\">\n          <h1>Hello Dreamer</h1>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Carousel } from \"react-responsive-carousel\";\nimport '../../App.css';\n\n//import images\nimport armguard from '../../images/Things/armguard.png';\nimport banner from '../../images/Things/banner.png';\nimport blanket from '../../images/Things/blanket.png';\nimport bottles from '../../images/Things/bottles.png';\nimport brasspins from '../../images/Things/brasspins.png';\nimport coinring from '../../images/Things/coinring.png';\nimport costumes from '../../images/Things/costumes.png';\nimport framebolsters from '../../images/Things/framebolsters.png';\n\n\nlet images = [\n  {\n    image: armguard,\n    info: \"Leather, Rivets - Hammer\",\n    tag: \"leather armguards... #rennaisancefestival #dragonscale #umyesplease\"\n  }, {\n    image: banner,\n    info: \"Birch, Curtain Rod Finials, Cabinet Knobs - Saws, Drill\",\n    tag: \"Game of Thrones banners need suitable hangers.\"\n  }, {\n    image: blanket,\n    info: \"Wool Yarn - Knitting Machine\",\n    tag: \"A wool blanket that i machine-knitted as a Christmas gift for my parents.\"\n  }, {\n    image: bottles,\n    info: \"Cotton String - Crochet Hook\",\n    tag: \"i collected a bunch of bottles and crocheted some string on them. They're pretty great.\"\n  }, {\n    image: brasspins,\n    info: \"Brazing Rod - Hammer, Anvil\",\n    tag: \"Saw these on Amazon and said to myself, \\\"Self, you can make those.\\\" So i did. \"\n  }, {\n    image: coinring,\n    info: \"Coin - Hammer, Punch, Mandrel, Nylon Hammer\",\n    tag: \"A Belizean $1 coin. The decagonal edge makes a great 'crown' effect when turned into a ring.\"\n  }, {\n    image: costumes,\n    info: \"Fabric - Sewing Machine\",\n    tag: \"First trip to the Minnesota Renaissance Festival. My friends were great sports. i made all of the costumes the day before\"\n  }, {\n    image: framebolsters,\n    info: \"Corner Brackets, Upholstery Tacks - Hammer\",\n    tag: \"Bought the frame, but it needed ... something. i added the corner bolsters. Now it's right.\"\n  }\n]\nclass Crafts extends Component {\n\n\n  render() {\n    let craftArray = images.map((craft, index) => {\n      return (\n        <div id=\"crafts\" key={index} >\n          <img\n            className=\"craftImg\"\n            src={craft.image}\n            title={craft.info}\n            alt={craft.tag}>\n          </img>\n          <h4>{craft.tag}</h4>\n        </div>\n      )\n    })\n\n    return (\n      <Carousel>\n        {craftArray}\n      </Carousel>\n    )\n  }\n\n};\n\nexport default Crafts;\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport '../../App.css';\n\nclass SectionA extends Component {\n  render() {\n    return (\n      <div>\n        <p>lay your broken here.</p>\n        <p>broken things</p>\n        <p>broken ideals</p>\n        <p>broken spirit</p>\n        <p>rest</p>\n      </div>\n    );\n  }\n}\n\nexport default SectionA;","import React, { Component } from 'react';\nimport '../../App.css';\n\nclass SectionB extends Component {\n  render() {\n    return (\n      <div id=\"sectionB\">\n        <h4>you may feel broken</h4>\n        <h3>people may tell you that you're broken</h3>\n       <h2>you are <em>not</em> broken</h2>\n      </div>\n    );\n  }\n}\n\nexport default SectionB;","import React, { Component } from 'react';\nimport '../../App.css';\n\nclass SectionA extends Component {\n  render() {\n    return (\n      <div id=\"fuckDiv\">\n     <p>FUCK!!!</p>\n      </div>\n    );\n  }\n}\n\nexport default SectionA;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header.js';\nimport Carousel from \"./components/Carousel/Carousel.js\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nimport SectionA from './components/Sections/SectionA.js';\nimport SectionB from './components/Sections/SectionB.js';\nimport SectionC from './components/Sections/SectionC.js';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Carousel />\n        <SectionA />\n        <SectionB />\n        <SectionC />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}